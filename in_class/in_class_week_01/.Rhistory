pivot_wider(names_from = date, values_from = cases_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(date = str_replace(date,"_","-"))
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30"))
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(datex = str_replace(date,"_","-"))
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(datex = str_replace(date,"-","_"))
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(datex = str_replace_all(date,"-","_")) %>%
mutate(cases_per_1000 = cases/population*1000) %>%
dplyr::select(county:date, cases_per_1000) %>%
pivot_wider(names_from = date, values_from = cases_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>% str_rep
View(covid_county_monthly_case_rate)
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(date = str_replace_all(date,"-","_")) %>%
mutate(cases_per_1000 = cases/population*1000) %>%
dplyr::select(county:date, cases_per_1000) %>%
pivot_wider(names_from = date, values_from = cases_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
View(covid_county_monthly_case_rate)
### Read in current data from the New York Times county-by-county COVID tracking from GitHub
# Read in county historical data on Aug 31
#covid_county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
#write_csv(covid_county, "covid_county_current_08_31_2020.csv")
# Read in state historical data on Aug 31
#covid_state <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
#write_csv(covid_state, "covid_state_current_08_31_2020.csv")
# Read in US historical data on Aug 31
#covid_us <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv")
#write_csv(covid_us, "covid_us_current_08_31_2020.csv")
### Read in stored data pulled from NYT Github on Aug 31
covid_county <- read_csv("covid_county_current_08_31_2020.csv") %>%
filter(!state %in% c("Northern Mariana Islands","Puerto Rico","Virgin Islands", "Guam")) %>%
filter(!county %in% c("Unknown")) %>%
dplyr::select(fips_code = fips, county, state, date, cases, deaths)
covid_state <- read_csv("covid_state_current_08_31_2020.csv") %>%
filter(!state %in% c("Northern Mariana Islands","Puerto Rico","Virgin Islands", "Guam"))  %>%
dplyr::select(fips_code = fips, state, date, cases, deaths)
covid_us <- read_csv("covid_us_current_08_31_2020.csv") %>%
mutate(location="US") %>%
dplyr::select(location, everything())
### Read in population data from census
population_county <- get_acs(geography="county", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
population_state<- get_acs(geography="state", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
population_us <- get_acs(geography="us", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
###Join population data to covid data
covid_county <- covid_county %>%
left_join(population_county, by=c("fips_code")) %>%
mutate(population = case_when(county == "New York City" ~ 8398748,
county == "Kansas City" ~ 491918,
county == "Joplin" ~ 50657,
TRUE~population)) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, county, state, date,deaths_per_1000, cases_per_1000, deaths, cases, population)
covid_state <- covid_state %>%
left_join(population_state, by=c("fips_code")) %>%
rename(location = state) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, location, date, deaths_per_1000, cases_per_1000, deaths, cases, population)
covid_us <- covid_us %>%
mutate(fips_code = "1") %>%
left_join(population_us, by=c("fips_code")) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, location, date, deaths_per_1000, cases_per_1000, deaths, cases, population)
rm(population_county, population_state, population_us)
# Join state and us data
covid_state_us <- covid_state %>%
bind_rows(covid_us)
rm(covid_state, covid_us)
### Make a dataframe of current cases
covid_county_current <- covid_county %>%
filter(date == "2020-08-30")
covid_state_us_current <- covid_state_us %>%
filter(date == "2020-08-30")
### Make a dataframe of cumulative monthly cases per capita as of 30th day of each month
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(date = str_replace_all(date,"-","_")) %>%
mutate(cases_per_1000 = cases/population*1000) %>%
dplyr::select(county:date, cases_per_1000) %>%
pivot_wider(names_from = date, values_from = cases_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
### Dataframe of cumulative monthly deaths per capita as of 30th day of each month
covid_county_monthly_death_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d_",date)) %>%
mutate(date = str_replace_all(date,"-","_")) %>%
mutate(deaths_per_1000 = deaths/population*1000) %>%
dplyr::select(county:date, deaths_per_1000) %>%
pivot_wider(names_from = date, values_from = deaths_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
### Shapefiles
counties <- counties(cb = TRUE)
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change = (d_2020_08_30-d_2020_07_30)/d_2020_07_30)
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100)
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_case_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_case_rate))
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_case_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_case_rate)) %>%
filter(d_2020_07_30) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_case_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_case_rate)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
## Load libraries and settings
library(tidyverse)
library(lubridate)
library(janitor)
library(tidycensus)
library(maps)
library(mapview)
library(scales)
library(mapview)
library(ggthemes)
library(sf)
library(leaflet)
library(leafpop)
library(leafem)
#library(raster)
library(tigris)
library(DT)
library(moderndive)
library(kableExtra)
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_case_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_case_rate)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_monthly_case_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_case_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_case_rate)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_monthly_death_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_death_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_death_rate)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_monthly_death_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_death_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_death_rate)) %>%
filter(d_2020_07_30 != 0) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
## Load libraries and settings
library(tidyverse)
library(lubridate)
library(janitor)
library(tidycensus)
library(maps)
library(mapview)
library(scales)
library(mapview)
library(ggthemes)
library(sf)
library(leaflet)
library(leafpop)
library(leafem)
#library(raster)
library(tigris)
library(DT)
library(moderndive)
library(kableExtra)
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
### Read in current data from the New York Times county-by-county COVID tracking from GitHub
# Read in county historical data on Aug 31
#covid_county <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
#write_csv(covid_county, "covid_county_current_08_31_2020.csv")
# Read in state historical data on Aug 31
#covid_state <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")
#write_csv(covid_state, "covid_state_current_08_31_2020.csv")
# Read in US historical data on Aug 31
#covid_us <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv")
#write_csv(covid_us, "covid_us_current_08_31_2020.csv")
### Read in stored data pulled from NYT Github on Aug 31
covid_county <- read_csv("covid_county_current_08_31_2020.csv") %>%
filter(!state %in% c("Northern Mariana Islands","Puerto Rico","Virgin Islands", "Guam")) %>%
filter(!county %in% c("Unknown")) %>%
dplyr::select(fips_code = fips, county, state, date, cases, deaths)
covid_state <- read_csv("covid_state_current_08_31_2020.csv") %>%
filter(!state %in% c("Northern Mariana Islands","Puerto Rico","Virgin Islands", "Guam"))  %>%
dplyr::select(fips_code = fips, state, date, cases, deaths)
covid_us <- read_csv("covid_us_current_08_31_2020.csv") %>%
mutate(location="US") %>%
dplyr::select(location, everything())
### Read in population data from census
population_county <- get_acs(geography="county", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
population_state<- get_acs(geography="state", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
population_us <- get_acs(geography="us", variables=c("B01001_001"),geometry = FALSE, year=2018) %>%
clean_names() %>%
dplyr::select(fips_code=geoid,
population=estimate)
###Join population data to covid data
covid_county <- covid_county %>%
left_join(population_county, by=c("fips_code")) %>%
mutate(population = case_when(county == "New York City" ~ 8398748,
county == "Kansas City" ~ 491918,
county == "Joplin" ~ 50657,
TRUE~population)) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, county, state, date,deaths_per_1000, cases_per_1000, deaths, cases, population)
covid_state <- covid_state %>%
left_join(population_state, by=c("fips_code")) %>%
rename(location = state) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, location, date, deaths_per_1000, cases_per_1000, deaths, cases, population)
covid_us <- covid_us %>%
mutate(fips_code = "1") %>%
left_join(population_us, by=c("fips_code")) %>%
mutate(deaths_per_1000 = deaths/population*1000,
cases_per_1000 = cases/population*1000) %>%
dplyr::select(fips_code, location, date, deaths_per_1000, cases_per_1000, deaths, cases, population)
rm(population_county, population_state, population_us)
# Join state and us data
covid_state_us <- covid_state %>%
bind_rows(covid_us)
rm(covid_state, covid_us)
### Make a dataframe of current cases
covid_county_current <- covid_county %>%
filter(date == "2020-08-30")
covid_state_us_current <- covid_state_us %>%
filter(date == "2020-08-30")
### Make a dataframe of cumulative monthly cases per capita as of 30th day of each month
covid_county_monthly_case_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d-",date)) %>%
mutate(date = str_replace_all(date,"-","_")) %>%
mutate(cases_per_1000 = cases/population*1000) %>%
dplyr::select(county:date, cases_per_1000) %>%
pivot_wider(names_from = date, values_from = cases_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
### Dataframe of cumulative monthly deaths per capita as of 30th day of each month
covid_county_monthly_death_rate <- covid_county %>%
filter(str_detect(date,"2020-03-30|2020-04-30|2020-05-30|2020-06-30|2020-07-30|2020-08-30")) %>%
mutate(date = paste0("d_",date)) %>%
mutate(date = str_replace_all(date,"-","_")) %>%
mutate(deaths_per_1000 = deaths/population*1000) %>%
dplyr::select(county:date, deaths_per_1000) %>%
pivot_wider(names_from = date, values_from = deaths_per_1000) %>%
mutate_if(is.numeric , replace_na, replace = 0)
### Shapefiles
counties <- counties(cb = TRUE)
covid_county_current %>%
group_by(state) %>%
summarise(deaths = sum(deaths),
population = sum(population)) %>%
mutate(deaths_per_1000 = deaths/population*100000) %>%
dplyr::select(state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))
covid_county_current %>%
group_by(state) %>%
summarise(deaths = sum(deaths),
population = sum(population)) %>%
mutate(deaths_per_1000 = deaths/population*100000) %>%
dplyr::select(state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
group_by(state) %>%
summarise(cases = sum(cases),
population = sum(population)) %>%
mutate(cases_per_100k = cases/population*100000) %>%
dplyr::select(state, cases_per_100k) %>%
arrange(desc(cases_per_100k)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
group_by(state) %>%
summarise(deaths = sum(deaths),
population = sum(population)) %>%
dplyr::select(state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
group_by(state) %>%
summarise(deaths = sum(deaths),
population = sum(population)) %>%
mutate(deaths_per_1000 = deaths/population*1000) %>%
dplyr::select(state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_state_us
## Load libraries and settings
library(tidyverse)
library(lubridate)
library(janitor)
library(tidycensus)
library(maps)
library(mapview)
library(scales)
library(mapview)
library(ggthemes)
library(sf)
library(leaflet)
library(leafpop)
library(leafem)
#library(raster)
library(tigris)
library(DT)
library(moderndive)
library(kableExtra)
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
# Turn off sci notation
options(scipen = 999)
covid_state_us_current
covid_state_us_current %>%
dplyr::select(state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_state_us_current %>%
dplyr::select(location, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
dplyr::select(county, state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
dplyr::select(county, state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
View(covid_county)
covid_state_us_current
### Read in stored data pulled from NYT Github on Aug 31
covid_county <- read_csv("covid_county_current_08_31_2020.csv") %>%
filter(!state %in% c("Northern Mariana Islands","Puerto Rico","Virgin Islands", "Guam")) %>%
filter(!county %in% c("Unknown")) %>%
dplyr::select(fips_code = fips, county, state, date, cases, deaths)
View(covid_county)
View(covid_state_us_current)
covid_state_us_current %>%
dplyr::select(location, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_state_current %>%
dplyr::select(county, state, cases_per_1000) %>%
arrange(desc(cases_per_1000))  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_state_us_current %>%
dplyr::select(county, state, cases_per_1000) %>%
arrange(desc(cases_per_1000)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_state_us_current %>%
dplyr::select(location, cases_per_1000) %>%
arrange(desc(cases_per_1000)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
dplyr::select(county, state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000))
covid_county_current %>%
dplyr::select(county, state, deaths_per_1000) %>%
arrange(desc(deaths_per_1000)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
covid_county_current %>%
dplyr::select(county, state, cases_per_1000) %>%
arrange(desc(cases_per_1000))
covid_county_current %>%
dplyr::select(county, state, cases_per_1000) %>%
arrange(desc(cases_per_1000)) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
# Join county shapes to other shapes
covid_county_population_geo <- geo_join(counties, covid_county_current, 'GEOID', 'fips_code', how = "inner")
# Define Color Scheme
binpal <- colorBin("plasma", covid_county_population_geo$cases_per_1000, 10, pretty = FALSE)
# Draw map
leaflet(covid_county_population_geo) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Wikimedia) %>%
addPolygons(fillColor = ~binpal(cases_per_1000), weight = 1, smoothFactor = 0.5, opacity = 0.1, fillOpacity = 0.5, color="black", popup = popupTable(covid_county_population_geo)) %>%
setView(-95, 39.335359608681216, 4) %>%
addLegend("bottomleft",
pal = binpal,
values = covid_county_population_geo$cases_per_100k,
title = "Cases per 100K",
labFormat = labelFormat(prefix = ""),
opacity = 1
)
# Join county shapes to other shapes
covid_county_population_geo <- geo_join(counties, covid_county_current, 'GEOID', 'fips_code', how = "inner")
# Define Color Scheme
binpal <- colorBin("plasma", covid_county_population_geo$cases_per_1000, 10, pretty = FALSE)
# Draw map
leaflet(covid_county_population_geo) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Wikimedia) %>%
addPolygons(fillColor = ~binpal(cases_per_1000), weight = 1, smoothFactor = 0.5, opacity = 0.1, fillOpacity = 0.5, color="black", popup = popupTable(covid_county_population_geo)) %>%
setView(-95, 39.335359608681216, 4) %>%
addLegend("bottomleft",
pal = binpal,
values = covid_county_population_geo$cases_per_1000,
title = "Cases per 100K",
labFormat = labelFormat(prefix = ""),
opacity = 1
)
# Join county shapes to other shapes
covid_county_population_geo <- geo_join(counties, covid_county_current, 'GEOID', 'fips_code', how = "inner")
# Define Color Scheme
binpal <- colorBin("plasma", covid_county_population_geo$deaths_per_1000, 10, pretty = FALSE)
# Draw map
leaflet(covid_county_population_geo) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Wikimedia) %>%
addPolygons(fillColor = ~binpal(deaths_per_1000), weight = 1, smoothFactor = 0.5, opacity = 0.1, fillOpacity = 0.5, color="black", popup = popupTable(covid_county_population_geo)) %>%
setView(-95, 39.335359608681216, 4) %>%
addLegend("bottomleft",
pal = binpal,
values = covid_county_population_geo$deaths_per_1000,
title = "Deaths per 100K",
labFormat = labelFormat(prefix = ""),
opacity = 1
)
# Join county shapes to other shapes
covid_county_population_geo <- geo_join(counties, covid_county_current, 'GEOID', 'fips_code', how = "inner")
# Define Color Scheme
binpal <- colorBin("plasma", covid_county_population_geo$deaths_per_1000, 10, pretty = FALSE)
# Draw map
leaflet(covid_county_population_geo) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Wikimedia) %>%
addPolygons(fillColor = ~binpal(deaths_per_1000), weight = 1, smoothFactor = 0.5, opacity = 0.1, fillOpacity = 0.5, color="black", popup = popupTable(covid_county_population_geo)) %>%
setView(-95, 39.335359608681216, 4) %>%
addLegend("bottomleft",
pal = binpal,
values = covid_county_population_geo$deaths_per_1000,
title = "Deaths per 100K",
labFormat = labelFormat(prefix = ""),
opacity = 1
)
covid_county_monthly_death_rate %>%
dplyr::select(county, state, d_2020_07_30, d_2020_08_30) %>%
mutate(late_july_to_late_august_pct_change_death_rate = (d_2020_08_30-d_2020_07_30)/d_2020_07_30*100) %>%
arrange(desc(late_july_to_late_august_pct_change_death_rate)) %>%
filter(d_2020_07_30 != 0) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), fixed_thead = T)
